--Tadelo M. Jember
-- M04-FINAL-Project
-- July 28, 2023

-- CREATING VIEW 
CREATE VIEW TITLE_UNAVAIL  AS
SELECT MV.TITLE, MD.MEDIA_ID
FROM MEDIA MD
JOIN MOVIES MV
ON MD.TITLE_ID = MV.TITLE_ID
JOIN RENTAL_HISTORY RH
 ON MD.MEDIA_ID = RH.MEDIA_ID
WHERE RETURN_DATE IS NULL;

-- CREATING SEQUENCE  IN RENTAL_CUSTOMERS TABLE
CREATE SEQUENCE CUSTOMER_ID_SEQ
START WITH 101
INCREMENT BY 1;

-- CREATING SEQUENCE IN MOVIES TABLE
CREATE SEQUENCE TITLE_ID_SEQ
START WITH 1
INCREMENT BY 1;

-- CREATING SEQUENCE IN MEDIA TABLE
CREATE SEQUENCE MEDIA_ID_SEQ
START WITH 92
INCREMENT BY 1;

-- CREATING SEQUENCE ACTOR TABLE 
CREATE SEQUENCE ACTOR_ID_SEQ
START WITH 1001
INCREMENT BY 1;

-- CREATING INDEX ON RENTAL_CUSTOMERS LAST-NAME COLUMN
CREATE INDEX RENTAL_CUSTOMERS_LASTNAME_IDX ON RENTAL_CUSTOMERS(LAST_NAME); 

-- CREATING SYNONYM
CREATE SYNONYM TU
FOR TITLE_UNAVAIL;

-- the following are MULTI LINE COMMENTs WHILE WRITING QUERIES
-- These are answers fro section F though section G of the given assignment 
/*
-- WRITING QUERIES FOR Fa
SELECT MV.TITLE_ID,MV.TITLE, COUNT(RH.RENTAL_DATE) AS RENTAL_COUNT
FROM MOVIES MV
LEFT JOIN MEDIA MD ON MV.TITLE_ID = MD.TITLE_ID
JOIN RENTAL_HISTORY RH ON MD.MEDIA_ID=RH.MEDIA_ID 
GROUP BY MV.TITLE_ID,MV.TITLE
ORDER BY RENTAL_COUNT DESC;

-- WRITING QUERIES FOR Fb
SELECT CONCAT(CONCAT(FIRST_NAME, ' '),LAST_NAME) AS FULL_NAME, 
CONCAT (CONCAT(CONCAT(CONCAT(ADDRESS, ' '), CITY), ' '), STATE) AS FULL_ADDRESS, 
LENGTH(CONCAT(FIRST_NAME, LAST_NAME)) AS NAME_LENGTH,
LENGTH(CONCAT(CONCAT(ADDRESS,CITY),STATE)) AS ADDRESS_LENGTH
FROM RENTAL_CUSTOMERS
WHERE CUSTOMER_ID IN (
SELECT CUSTOMER_ID
FROM RENTAL_HISTORY
GROUP BY CUSTOMER_ID
HAVING COUNT(*) > 1)
ORDER BY LAST_NAME;

-- WRITING QUERIES FOR Fc
SELECT FORMAT, COUNT(*) AS RENTAL_COUNT
FROM MEDIA M
JOIN RENTAL_HISTORY RH
ON M.MEDIA_ID = RH.MEDIA_ID
GROUP BY FORMAT
ORDER BY RENTAL_COUNT DESC;

-- WRITING QUERIES FOR Fd
SELECT AC.FIRST_NAME, AC.LAST_NAME, MV.TITLE
FROM ACTORS AC
JOIN STAR_BILLINGS SB 
ON AC.ACTOR_ID = SB.ACTOR_ID
JOIN MOVIES MV
ON SB.TITLE_ID = MV.TITLE_ID
ORDER BY AC.LAST_NAME, AC.FIRST_NAME;

-- WRITING QUERIES FOR Fe
CREATE VIEW CLASSICS AS 
SELECT TITLE, RELEASE_DATE
FROM MOVIES 
WHERE EXTRACT(YEAR FROM RELEASE_DATE) <= 1996
ORDER BY RELEASE_DATE;
--OR
CREATE VIEW CLASSICS AS 
SELECT TITLE, RELEASE_DATE
FROM MOVIES 
WHERE EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM RELEASE_DATE) >= 25
ORDER BY RELEASE_DATE;


-- CREATING QUERIES FOR G-Query1
SELECT A.FIRST_NAME,A.LAST_NAME,M.TITLE,MIN(A.BIRTH_DATE)
FROM ACTORS A
JOIN STAR_BILLINGS SB
ON A.ACTOR_ID=SB.ACTOR_ID
JOIN MOVIES M
ON SB.TITLE_ID=M.TITLE_ID 
GROUP BY A.FIRST_NAME, A.LAST_NAME,M.TITLE
ORDER BY A.FIRST_NAME ASC;

-- CREATING QUERIES FOR G-Query2
SELECT CONCAT(CONCAT(RC.FIRST_NAME, ' '),RC.LAST_NAME) AS "FULL NAME", M.FORMAT AS "MEDIA TYPE ORDERED"
FROM RENTAL_CUSTOMERS RC
JOIN RENTAL_HISTORY RH
ON RC.CUSTOMER_ID=RH.CUSTOMER_ID
JOIN MEDIA M
ON RH.MEDIA_ID=M.MEDIA_ID
WHERE RC.CUSTOMER_ID IN (
SELECT CUSTOMER_ID
FROM RENTAL_HISTORY
WHERE RH.CUSTOMER_ID IS NOT NULL)
ORDER BY FIRST_NAME;


*/

